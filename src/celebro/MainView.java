/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package celebro;

import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.net.URL;
import java.net.URLClassLoader;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Base64;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Properties;
import javax.swing.JOptionPane;
import reflexon.Instanciador;
import reflexon.Template;

/**
 *
 * @author mfernandes
 */
public class MainView extends javax.swing.JFrame implements Instanciador {

    public HashMap<String, Object> MEMORIA;
    public Properties properties;
    public String file;

    /**
     * Creates new form MainView
     *
     * @param MEMORIA
     * @param properties
     * @param file
     */
    public MainView(HashMap<String, Object> MEMORIA, Properties properties, String file) {
        this.properties = properties;
        this.file = file;
        this.MEMORIA = MEMORIA;
        try {
            for (String key : properties.stringPropertyNames()) {
                if (key.startsWith("base.template.")) {
                    MEMORIA.put(key, getTemplate(key.substring(14), null));
                }
                if (key.startsWith("vendor.template.")) {
                    Template t = getTemplate(key.substring(16), null);
                    if (t._auto()) {
                        MEMORIA.put(key, t);
                    }
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            sendEvent("ERROR", ex);
        }

        sendEvent("INIT", this);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTextField1.setText("chave");

        jTextField2.setText("valor");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jButton1.setText("gravar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("conceito");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("metodo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("coisa");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("salvar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTextField3.setText("nome");
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextArea2KeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jTextArea2);

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jTextArea3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextArea3KeyReleased(evt);
            }
        });
        jScrollPane4.setViewportView(jTextArea3);

        jLabel1.setText("conversa");

        jLabel2.setText("tarefa");

        jButton6.setText("outro");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("base?");

        jButton7.setText("inicializavel");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("eventos");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton6, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton8)
                                .addGap(0, 0, Short.MAX_VALUE))))))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(164, 164, 164))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1)
                    .addComponent(jButton7)
                    .addComponent(jButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addComponent(jButton5)))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                    .addComponent(jScrollPane4)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        setProperty(jTextField1.getText(), jTextField2.getText());
    }//GEN-LAST:event_jButton1ActionPerformed

    public void setProperty(String key, String value) {
        properties.setProperty(key, value);
        sendEvent("ADD_PROP", new String[]{key, value});
        try {
            properties.store(new FileWriter(file), file);
            sendEvent("FILE_UPDATE", file);
            System.out.println("*******************************************************");
            properties.entrySet().forEach((t) -> {
                System.out.println(t.getKey() + " -> " + t.getValue());
            });
        } catch (IOException ex) {
            sendEvent("ERRO", ex);
            JOptionPane.showMessageDialog(rootPane, "ERRO AO SALVAR! " + ex);
        }
    }


    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // conceito
        setTemplate("D", "template.conceito");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //metodo
        setTemplate("M", "template.metodo");

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // coisa
        setTemplate("C", "template.coisa");

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            // salva
            storeTemplate(
                    jCheckBox1.isSelected() ? "base.template." : "vendor.template.",
                    getNomeClass(jTextField3.getText(), jTextArea1.getText().substring(0, 1)),
                    jTextArea1.getText().substring(1));
        } catch (Exception ex) {
            sendEvent("ERRO", ex);
            JOptionPane.showMessageDialog(rootPane, "ERRO AO CRIAR! " + ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    public Process storeTemplate(String pref, String name, String content) throws Exception {
        String b64 = Base64.getEncoder().encodeToString(content.getBytes());
        setProperty(pref + name, b64);
        sendEvent("STORE_TEMPLATE", new String[]{name, content});
        return Runtime.getRuntime().exec(
                ("java,reflexon.Reflexon,decode," + name + ","
                        + b64).split(","), null, new File("/home/mfernandes/NetBeansProjects/Reflexon/class/"));
    }

    private void jTextArea2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea2KeyReleased
        // conversa
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

        }
    }//GEN-LAST:event_jTextArea2KeyReleased

    private void jTextArea3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea3KeyReleased
        // tarefa
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

                String[] split = jTextArea3.getText().split("\n");
                String dt = split[split.length - 1];

                String nome = dt.substring(0, dt.indexOf(":"));
                String in = dt.substring(nome.length() + 1);

                String memo = in.substring(0, in.indexOf(":"));
                in = in.substring(memo.length() + 1);

                runTemplateReal(nome, memo, in, null);
            }
        } catch (Exception ex) {
            sendEvent("ERRO", ex);
            JOptionPane.showMessageDialog(rootPane, "ERRO AO EXECUTAR! " + ex);
        }
    }//GEN-LAST:event_jTextArea3KeyReleased

    public Template runTemplateReal(String nomeReal, String memo, Object in, String classLoader) throws Exception {
        String[] files = getFilesWithNome(Base64.getEncoder().encodeToString(nomeReal.getBytes()).replace("=", ""));

        if (files.length == 1) {
            return runTemplate(files[0].replace(".class", ""), memo, in, classLoader);
        } else if (files.length > 0) {
            String arq;
            String req = (String) MEMORIA.get("base.universo.requerendo");
            switch (req) {
                case "definicao":
                    arq = getFileAspecto("D", files);
                    if (arq == null) {
                        return criar(nomeReal);
                    } else {
                        return runTemplate(arq.replace(".class", ""), memo, in, classLoader);
                    }
                case "metodo":
                    arq = getFileAspecto("D", files);
                    if (arq == null) {
                        return criar(nomeReal);
                    } else {
                        return runTemplate(arq.replace(".class", ""), memo, in, classLoader);
                    }
                case "coisa":
                    arq = getFileAspecto("D", files);
                    if (arq == null) {
                        return criar(nomeReal);
                    } else {
                        return runTemplate(arq.replace(".class", ""), memo, in, classLoader);
                    }
                case "outro":
                    arq = getFileAspecto("D", files);
                    if (arq == null) {
                        return criar(nomeReal);
                    } else {
                        return runTemplate(arq.replace(".class", ""), memo, in, classLoader);
                    }
            }

        }
        //// desconhecido criar? oqu é isso?
        return criar(nomeReal);
    }

    public Template criar(String nome) {
        JOptionPane.showMessageDialog(rootPane, "Este item não existe! " + nome);
        sendEvent("AUSENTE", nome);
        ///criar  e retornar o template instanciado
        return null;
    }

    public void sendEvent(String nome, Object data) {
        for (Object memo : MEMORIA.values()) {
            if (memo instanceof Template) {
                ((Template) memo)._evento(nome, data);
            }
        }
    }

    String getFileAspecto(String asp, String[] files) {
        for (String file : files) {
            if (file.startsWith(asp)) {
                return file;
            }
        }
        return null;
    }

    String[] getFilesWithNome(String nome) throws IOException {
        return Files.list(new File("/home/mfernandes/NetBeansProjects/Reflexon/class/reflexon").toPath()).filter((t) -> {
            return t.getFileName().toString().endsWith(nome + ".class"); //To change body of generated lambdas, choose Tools | Templates.
        }).map((t) -> {
            return t.getFileName().toString(); //To change body of generated lambdas, choose Tools | Templates.
        }).toArray(String[]::new);
    }


    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3KeyTyped

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // outro
        setTemplate("O", "template");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        jTextArea1.setText(jTextArea1.getText().substring(0, jTextArea1.getText().length() - 2)
                + "\n  @Override"
                + "\n  public boolean _auto() {\n"
                + "        return true;\n"
                + "    }\n"
                + "}"
        );
    }//GEN-LAST:event_jButton7ActionPerformed


    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        jTextArea1.setText(jTextArea1.getText().substring(0, jTextArea1.getText().length() - 2)
                + "\n  @Override"
                + "\n  public void _evento(String tipo, Object data) {\n"
                + "        \n"
                + "    }\n"
                + "}"
        );
    }//GEN-LAST:event_jButton8ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        sendEvent("END", this);
    }//GEN-LAST:event_formWindowClosing

    public String setTemplate(String pref, String template) {
        jTextArea1.setText(pref + properties.getProperty(template)
                .replace("NOME_REAL", jTextField3.getText())
                .replace(";", ";\n").replace(
                "public class NOME extends Template {;",
                "public class " + getNomeClass(jTextField3.getText(), pref) + " extends Template {;"));
        return jTextArea1.getText();
    }

    String replaceIf(String key, String val, Hashtable h) {
        if (key.startsWith("@")) {
            ArrayList<String> ped = new ArrayList<>();
            String[] split = val.split(properties.getProperty("REFERENCIA1"));
            for (String string : split) {
                if (string.contains(properties.getProperty("REFERENCIA2"))) {
                    String[] split1 = string.split(properties.getProperty("REFERENCIA2"));
                    ped.add(h.get(split1[0]) + split1[1]);
                } else {
                    ped.add(string);
                }
            }
        }
        return val;
    }

    public String getNomeClass(String nome, String tipo) {
        String qtd = "0";
        String b64 = Base64.getEncoder().encodeToString((nome).getBytes());
        if (b64.endsWith("=")) {
            qtd = "1";
        }
        if (b64.endsWith("==")) {
            qtd = "2";
        }
        return tipo + qtd + b64.replace("=", "");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables

    public Class getTemplateClass(String nome, String classLoader, boolean isURL) throws Exception {
        // Create a File object on the root of the directory containing the class file

        URL url;
        if (isURL) {
            url = new URL(classLoader);
        } else {
            String ld = null;
            try {
                if (classLoader != null) {
                    ld = (String) MEMORIA.get("classLoader");
                    if (ld == null) {
                        ld = (String) properties.get(classLoader);
                    }
                }
            } catch (Exception ex) {
                sendEvent("ERRO", ex);
            }
            if (ld == null) {
                ld = (String) properties.get("classLoader");
            }
            if (ld == null) {
                ld = "/home/mfernandes/NetBeansProjects/Reflexon/class/";
            }
            File f = new File(ld);

            // Convert File to a URL
            url = f.toURI().toURL();          // file:/c:/myclasses/
        }
        URL[] urls = new URL[]{url};

        // Create a new class loader with the directory
        ClassLoader cl = new URLClassLoader(urls);

        // Load in the class; MyClass.class should be located in
        // the directory file:/c:/myclasses/com/mycompany
        return cl.loadClass("reflexon." + nome);
    }

    public Template getTemplate(String nameClass, String memo) throws Exception {

        Class cls = getTemplateClass(nameClass, null, false);
        return getTemplate(cls, memo);

    }

    public Template getTemplate(Class cls, String memo) throws Exception {

        Template t = (Template) cls.newInstance();
        t._c(MEMORIA, memo, properties, file, this);
        if (memo != null) {
            MEMORIA.put(memo + ".out", t);
        }
        sendEvent("TEMPLATE_INST", t);
        return t;

    }

    public Template runTemplate(Template t, String nome, String memo, Object in, String classLoader) throws Exception {
        sendEvent("TEMLATE_RUN", t);

        MEMORIA.put(memo + ".in", in);

        if (t.getTipo().equals("conceito")) {

            String[] verbetes = (String[]) t.getClass().getMethod("getVerbetes").invoke(t);
//            String[] split1 = in.split(",");
            String[] significados = (String[]) t.getClass()
                    .getMethod("getSignificados", String[].class)
                    .invoke(t, in);

            MEMORIA.put(memo + ".verbetes", (verbetes));
            MEMORIA.put(memo + ".significados", (significados));

        } else if (t.getTipo().equals("metodo")) {

            t.getClass().getMethod("setData", Object.class).invoke(t, in);
            t.getClass().getMethod("run").invoke(t);
            Object retorno = t.getClass().getMethod("getData").invoke(t);

            MEMORIA.put(memo, retorno);

        } else if (t.getTipo().equals("coisa")) {

            String[] classes = (String[]) t.getClass().getMethod("getClasses").invoke(t);
            Method[] metodos = (Method[]) t.getClass().getMethod("getMetodos").invoke(t);
            Field[] atributos = (Field[]) t.getClass().getMethod("getAtributos").invoke(t);

            MEMORIA.put(memo + ".classes", classes);
            MEMORIA.put(memo + ".metodos", metodos);
            MEMORIA.put(memo + ".atributos", atributos);
        } else {
            ////resolver com outra classeMETODO oque fazer com ele
            Template t2;
            if (t.getTipo().startsWith("base.") || t.getTipo().startsWith("vendor.") || t.getTipo().startsWith("temp.")) {
                t2 = (Template) MEMORIA.get(t.getTipo());
            } else {
                t2 = getTemplate(t.getTipo(), classLoader);
            }
            t2.getClass().getMethod("setData", Object.class).invoke(t2, t);
            t2.getClass().getMethod("run").invoke(t);
            Object retorno = t.getClass().getMethod("getData").invoke(t);

            MEMORIA.put(memo + ".retorno", retorno);
        }

        System.out.println("**************** RESUMO *************");
        MEMORIA.entrySet().forEach((k) -> {
            if (k.getKey().startsWith(memo)) {
                System.out.println(k.getKey() + " -> " + k.getValue());
            }

        });

        System.out.println("**************** FIM RESUMO *************");
        return t;
    }

    public Template runTemplate(String nome, String memo, Object in, String classLoader) throws Exception {

        return runTemplate(getTemplate(nome, memo), nome, memo, in, classLoader);

    }
}
